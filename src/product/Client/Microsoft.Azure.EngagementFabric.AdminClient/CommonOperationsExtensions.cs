// <auto-generated>
// Copyright (c) Microsoft Corporation.// Licensed under the MIT license.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.EngagementFabric.AdminClient
{
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for CommonOperations.
    /// </summary>
    public static partial class CommonOperationsExtensions
    {
            /// <summary>
            /// Get CEF tenant
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='apiVersion'>
            /// </param>
            /// <param name='tenant'>
            /// Name of CEF account
            /// </param>
            public static Tenant GetTenant(this ICommonOperations operations, string apiVersion, string tenant)
            {
                return operations.GetTenantAsync(apiVersion, tenant).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get CEF tenant
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='apiVersion'>
            /// </param>
            /// <param name='tenant'>
            /// Name of CEF account
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Tenant> GetTenantAsync(this ICommonOperations operations, string apiVersion, string tenant, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTenantWithHttpMessagesAsync(apiVersion, tenant, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
